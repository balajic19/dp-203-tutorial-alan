{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "workspacedataeng"
		},
		"lssamplestore01_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lssamplestore01'"
		},
		"workspacedataeng-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'workspacedataeng-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:workspacedataeng.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"lssamplestore01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://samplestore01.dfs.core.windows.net/"
		},
		"workspacedataeng-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapseaccount007.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/pooldb')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Copy-StorageAccount')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_tnv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "csv//"
							},
							{
								"name": "Destination",
								"value": "dbo.pool_logdata"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"writeBehavior": "Insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Correlation id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Correlation id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Operation name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operation name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Event category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Event category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Event initiated by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Event initiated by",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource group",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Resource",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_tnv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_tnv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-06-07T15:03:31Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_tnv')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_tnv')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_tnv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "Correlation id",
						"type": "varchar"
					},
					{
						"name": "Operation name",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "Event category",
						"type": "varchar"
					},
					{
						"name": "Level",
						"type": "varchar"
					},
					{
						"name": "Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Subscription",
						"type": "varchar"
					},
					{
						"name": "Event initiated by",
						"type": "varchar"
					},
					{
						"name": "Resource type",
						"type": "varchar"
					},
					{
						"name": "Resource group",
						"type": "varchar"
					},
					{
						"name": "Resource",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "pool_logdata"
				},
				"sqlPool": {
					"referenceName": "pooldb",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/pooldb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_tnv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lssamplestore01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Correlation id",
						"type": "String"
					},
					{
						"name": "Operation name",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Event category",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Subscription",
						"type": "String"
					},
					{
						"name": "Event initiated by",
						"type": "String"
					},
					{
						"name": "Resource type",
						"type": "String"
					},
					{
						"name": "Resource group",
						"type": "String"
					},
					{
						"name": "Resource",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lssamplestore01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/lssamplestore01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lssamplestore01_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lssamplestore01_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/workspacedataeng-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('workspacedataeng-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/workspacedataeng-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('workspacedataeng-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OPENROWSET')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * FROM OPENROWSET(\n    BULK 'https://samplestore01.blob.core.windows.net/parquet/*.parquet',\n    FORMAT='Parquet'\n) AS logtemp_data",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL Pool - Copy - CSV')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [pool_logdata]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL\n)\n\nCOPY INTO [pool_logdata] FROM 'https://samplestore01.blob.core.windows.net/csv/Log.csv'\nWITH (\n\tFILE_TYPE='CSV',\n\tCREDENTIAL=(IDENTITY='Storage Account Key', SECRET='7h+tVhvTHTmdonbwHe1gKZQNWFICSi9uH2o2B8Bli5TmSO7zqLEeM97qKoPtKCAtxXOaBpzNeUud+AStH8iYLQ=='),\n\tFIRSTROW=2)\n\nSELECT * FROM [pool_logdata]\n\nDROP TABLE [pool_logdata]\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "pooldb",
						"poolName": "pooldb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL Pool - Copy - Parquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE [pool_logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](500) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL\n)\n\nCOPY INTO [pool_logdata_parquet] FROM 'https://samplestore01.blob.core.windows.net/parquet/*.parquet'\nWITH (\n\tFILE_TYPE='PARQUET',\n\tCREDENTIAL=(IDENTITY='Storage Account Key', \n    SECRET='7h+tVhvTHTmdonbwHe1gKZQNWFICSi9uH2o2B8Bli5TmSO7zqLEeM97qKoPtKCAtxXOaBpzNeUud+AStH8iYLQ=='))\n\nSELECT * FROM [pool_logdata_parquet]\n\nDROP TABLE [pool_logdata_parquet]\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "pooldb",
						"poolName": "pooldb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL Pool - External - CSV')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE DATABASE SCOPED CREDENTIAL AzureStorageCredential\nWITH IDENTITY = 'samplestore01'\n, SECRET = '7h+tVhvTHTmdonbwHe1gKZQNWFICSi9uH2o2B8Bli5TmSO7zqLEeM97qKoPtKCAtxXOaBpzNeUud+AStH8iYLQ=='\n\nCREATE EXTERNAL DATA SOURCE log_data_csv\nWITH(\n    LOCATION = 'abfss://csv@samplestore01.dfs.core.windows.net',\n    CREDENTIAL = AzureStorageCredential,\n    TYPE=HADOOP)\n\n\nCREATE EXTERNAL FILE FORMAT TextFileFormat WITH(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR=',',\n        FIRST_ROW = 2\n    )\n);\n\n\n\nCREATE EXTERNAL TABLE [logdata]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](200) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH (\n LOCATION = '/Log.csv',\n    DATA_SOURCE = log_data_csv,  \n    FILE_FORMAT = TextFileFormat\n)\n\n\nSELECT * FROM [logdata]\n\nDROP EXTERNAL TABLE [logdata]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "pooldb",
						"poolName": "pooldb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL Pool - External - Parquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Helloworld186#'\n\n--\n\nCREATE DATABASE SCOPED CREDENTIAL SasToken\nWITH IDENTITY = 'SHARED ACCESS SIGNATURE'\n, SECRET = 'sv=2022-11-02&ss=b&srt=sco&sp=rl&se=2023-06-30T22:27:15Z&st=2023-06-07T14:27:15Z&spr=https&sig=keiX9jRukX6sCQ6xz1yJqO9m0M6oJxQLWUEOaEO%2F0XI%3D'\n\n\n\nCREATE EXTERNAL DATA SOURCE log_data_parquet\nWITH(\n    LOCATION = 'https://samplestore01.blob.core.windows.net/parquet',\n    CREDENTIAL = SasToken)\n\nCREATE EXTERNAL FILE FORMAT ParquetFileFormat WITH(\n    FORMAT_TYPE=PARQUET,\n    DATA_COMPRESSION='org.apache.hadoop.io.compress.SnappyCodec'\n)\n\n\nCREATE EXTERNAL TABLE [logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](200) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH (\n LOCATION = '/',\n    DATA_SOURCE = log_data_parquet,  \n    FILE_FORMAT = ParquetFileFormat\n)\n\n\nSELECT * FROM  [logdata_parquet]\n\nDROP EXTERNAL TABLE [logdata_parquet]\nDROP EXTERNAL DATA SOURCE log_data_parquet\nDROP EXTERNAL FILE FORMAT ParquetFileFormat\nDROP DATABASE SCOPED CREDENTIAL SasToken\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "pooldb",
						"poolName": "pooldb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL Pool - Table - PolyBase')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * FROM sys.database_scoped_credentials\n\nSELECT * FROM sys.external_data_sources\n\nSELECT * FROM sys.external_file_formats\n\n\nSELECT * FROM logdata_parquet\n\nSELECT * FROM pool_logdata_parquet\n\nDROP TABLE pool_logdata_parquet\n\nCREATE TABLE pool_logdata_parquet\nWITH(\n    DISTRIBUTION = ROUND_ROBIN\n)\nAS SELECT * FROM logdata_parquet",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "pooldb",
						"poolName": "pooldb"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Serverless-External-CSV')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--CREATE DATABASE appdb\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Helloworld186#'\n\nCREATE DATABASE SCOPED CREDENTIAL SasToken\nWITH IDENTITY = 'SHARED ACCESS SIGNATURE'\n, SECRET = 'sv=2022-11-02&ss=b&srt=sco&sp=rwl&se=2023-06-07T04:45:20Z&st=2023-06-06T20:45:20Z&spr=https&sig=vIkO5Nj5PAWCl9xPyFfpNzQxDJXd27aZRClLNsKi3Vw%3D'\n\nCREATE EXTERNAL DATA SOURCE log_data\nWITH \n    (LOCATION='https://samplestore01.blob.core.windows.net/csv',\n     CREDENTIAL = SasToken)\n\n\nCREATE EXTERNAL FILE FORMAT TextFileFormat WITH(\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR=',',\n        FIRST_ROW = 2\n    )\n);\n\n\n\nCREATE EXTERNAL TABLE [logdata]\n(\n    [Correlation id] [varchar](200) NULL,\n\t[Operation name] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Event category] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [datetime] NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Event initiated by] [varchar](1000) NULL,\n\t[Resource type] [varchar](1000) NULL,\n\t[Resource group] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH (\n LOCATION = '/Log.csv',\n    DATA_SOURCE = log_data,  \n    FILE_FORMAT = TextFileFormat\n)\n\n\nSELECT * FROM [logdata]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Serverless-External-Multiple-Parquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nCREATE EXTERNAL DATA SOURCE log_data_parquet\nWITH(\n    LOCATION = 'https://samplestore01.blob.core.windows.net/parquet',\n    CREDENTIAL = SasToken)\n\nCREATE EXTERNAL FILE FORMAT ParquetFileFormat WITH(\n    FORMAT_TYPE=PARQUET,\n    DATA_COMPRESSION='org.apache.hadoop.io.compress.SnappyCodec'\n)\n\n\nDROP EXTERNAL TABLE logdata_parquet\n\nCREATE EXTERNAL TABLE [logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](200) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH (\n LOCATION = '/',\n    DATA_SOURCE = log_data_parquet,  \n    FILE_FORMAT = ParquetFileFormat\n)\n\nSELECT * FROM  [logdata_parquet]\n\nSELECT [Operationname], COUNT([Operationname]) as OPERATIONCOUNT FROM [logdata_parquet] GROUP BY [Operationname] ORDER BY OPERATIONCOUNT DESC\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Serverless-External-Parquet')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--CREATE DATABASE appdb\n\n--CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Helloworld186#'\n\n-- DROP DATABASE SCOPED CREDENTIAL SasToken\n\n--CREATE DATABASE SCOPED CREDENTIAL SasToken\n--WITH IDENTITY = 'SHARED ACCESS SIGNATURE'\n--, SECRET = 'sv=2022-11-02&ss=b&srt=sco&sp=rwl&se=2023-06-07T04:45:20Z&st=2023-06-06T20:45:20Z&spr=https&sig=vIkO5Nj5PAWCl9xPyFfpNzQxDJXd27aZRClLNsKi3Vw%3D'\n\nCREATE EXTERNAL DATA SOURCE log_data_parquet\nWITH(\n    LOCATION = 'https://samplestore01.blob.core.windows.net/parquet',\n    CREDENTIAL = SasToken)\n\nCREATE EXTERNAL FILE FORMAT ParquetFileFormat WITH(\n    FORMAT_TYPE=PARQUET,\n    DATA_COMPRESSION='org.apache.hadoop.io.compress.SnappyCodec'\n)\n\nDROP EXTERNAL TABLE logdata_parquet\n\nCREATE EXTERNAL TABLE [logdata_parquet]\n(\n    [Correlationid] [varchar](200) NULL,\n\t[Operationname] [varchar](200) NULL,\n\t[Status] [varchar](100) NULL,\n\t[Eventcategory] [varchar](100) NULL,\n\t[Level] [varchar](100) NULL,\n\t[Time] [varchar](200) NULL,\n\t[Subscription] [varchar](200) NULL,\n\t[Eventinitiatedby] [varchar](1000) NULL,\n\t[Resourcetype] [varchar](1000) NULL,\n\t[Resourcegroup] [varchar](1000) NULL,\n    [Resource] [varchar](2000) NULL)\nWITH (\n LOCATION = '/log.parquet',\n    DATA_SOURCE = log_data_parquet,  \n    FILE_FORMAT = ParquetFileFormat\n)\n\n\nSELECT * FROM  [logdata_parquet]\n\nSELECT [Operationname], COUNT([Operationname]) as OPERATIONCOUNT FROM [logdata_parquet] GROUP BY [Operationname] ORDER BY OPERATIONCOUNT DESC\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "appdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pooldb')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}